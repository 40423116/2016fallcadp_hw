<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>40423116 作業網誌</title><link href="./" rel="alternate"></link><link href="./feeds/all.atom.xml" rel="self"></link><id>./</id><updated>2016-12-01T12:00:00+08:00</updated><entry><title>40423116 12/1</title><link href="./40423116-121.html" rel="alternate"></link><updated>2016-12-01T12:00:00+08:00</updated><author><name>40423116</name></author><id>tag:,2016-12-01:./40423116-121.html</id><summary type="html">&lt;p&gt;W12 組合件組合&lt;/p&gt;


&lt;p&gt;Solvespace 組合件繪圖:&lt;/p&gt;

&lt;p&gt;&lt;img src="./../w12/W12.png"width="800" /&gt;&lt;/p&gt;
&lt;h2&gt;Solvespace 組合圖&lt;/h2&gt;
&lt;iframe src="./../w12/40423116_W12.html" width="800" height="600"&gt;&lt;/iframe&gt;</summary><category term="WiKi"></category></entry><entry><title>四連桿機構V2.</title><link href="./si-lian-gan-ji-gou-v2.html" rel="alternate"></link><updated>2016-11-17T12:00:00+08:00</updated><author><name>40423116</name></author><id>tag:,2016-11-17:./si-lian-gan-ji-gou-v2.html</id><summary type="html">&lt;p&gt;W10-4 四連桿機構V2.&lt;/p&gt;


&lt;p&gt;Solvespace 四連桿圖檔:&lt;/p&gt;

&lt;p&gt;&lt;img src="./../w10/40423116-w10-4.png"width="800" /&gt;
&lt;img src="./../w10/40423116-w10-4(2).png"width="800" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./../w10/40423116.csv"&gt;40423116.csv&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./../w10/40423116-w10-4.slvs"&gt;40423116-w10-4.slvs&lt;/a&gt;&lt;/p&gt;
&lt;!-- 導入 Brython 標準程式庫 --&gt;

&lt;script type="text/javascript" 
    src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;
&lt;/script&gt;

&lt;!-- 啟動 Brython --&gt;

&lt;script&gt;
window.onload=function(){brython(1);}
&lt;/script&gt;

&lt;!-- 以下實際利用  Brython 畫兩條直線 --&gt;

&lt;canvas id="W10" width="600" height="200"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
from browser import document as doc
import math
# 準備繪圖畫布
canvas = doc["W10"]
ctx = canvas.getContext("2d")

# 以下可以利用 ctx 物件進行畫圖
# 先畫一條直線
ctx.beginPath()
# 設定線的寬度為 1 個單位
ctx.lineWidth = 1
# 將畫筆移動到 (100, 100) 座標點
ctx.moveTo(100, 100)
# 然後畫直線到 (150, 200) 座標點
ctx.lineTo(150, 200)
# 畫右上左下的斜線
ctx.moveTo(150, 100)
ctx.lineTo(100, 200)
# 設定顏色為藍色, 也可以使用 "rgb(0, 0, 255)" 字串設定顏色值
ctx.strokeStyle = "blue"
# 實際執行畫線
ctx.stroke()
ctx.closePath()
&lt;/script&gt;

&lt;h3&gt;聖誕禮物&lt;/h3&gt;
&lt;!-- 導入 brython.js --&gt;

&lt;script type="text/javascript" src="https://cdn.rawgit.com/brython-dev/brython/master/www/src/brython_dist.js"&gt;&lt;/script&gt;

&lt;!-- 啟動 brython() --&gt;

&lt;script&gt;
window.onload=function(){brython(1);}
&lt;/script&gt;

&lt;!-- 以下利用 Brython 程式執行繪圖 --&gt;

&lt;canvas id="plotarea" width="500" height="500"&gt;&lt;/canvas&gt;

&lt;script type="text/python3"&gt;
# 導入 doc
from browser import document as doc
from browser import console
import math

# 準備繪圖畫布
canvas = doc["plotarea"]
ctx = canvas.getContext("2d")

# 開始畫直線
ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(10, 250)
ctx.lineTo(240, 250)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(240, 250)
ctx.lineTo(240, 330)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(240, 330)
ctx.lineTo(10, 330)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(10, 330)
ctx.lineTo(10, 250)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(30, 330)
ctx.lineTo(30, 490)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(30, 490)
ctx.lineTo(220, 490)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(220, 490)
ctx.lineTo(220, 330)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(260, 250)
ctx.lineTo(490, 250)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(490, 250)
ctx.lineTo(490, 330)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(490, 330)
ctx.lineTo(260, 330)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(260, 330)
ctx.lineTo(260, 250)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(280, 330)
ctx.lineTo(280, 490)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(280, 490)
ctx.lineTo(470, 490)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(470, 490)
ctx.lineTo(470, 330)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(135, 10)
ctx.lineTo(365, 10)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(365, 10)
ctx.lineTo(365, 90)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(365, 90)
ctx.lineTo(135, 90)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(135, 90)
ctx.lineTo(135, 10)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(155, 90)
ctx.lineTo(155, 250)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(155, 250)
ctx.lineTo(345, 250)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 10
ctx.moveTo(345, 250)
ctx.lineTo(345, 90)
ctx.strokeStyle = "#FF0000"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 50
ctx.moveTo(125, 495)
ctx.lineTo(125, 245)
ctx.strokeStyle = "#00FFFF"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 50
ctx.moveTo(375, 495)
ctx.lineTo(375, 245)
ctx.strokeStyle = "#00FFFF"
ctx.stroke()

ctx.beginPath()
ctx.lineWidth = 50
ctx.moveTo(250, 255)
ctx.lineTo(250, 5)
ctx.strokeStyle = "#00FFFF"
ctx.stroke()


&lt;/script&gt;</summary><category term="WiKi"></category></entry><entry><title>四連桿機構</title><link href="./si-lian-gan-ji-gou.html" rel="alternate"></link><updated>2016-10-19T12:00:00+08:00</updated><author><name>40423116</name></author><id>tag:,2016-10-19:./si-lian-gan-ji-gou.html</id><summary type="html">&lt;p&gt;Solvespace 四連桿機構&lt;/p&gt;


&lt;p&gt;&lt;a href="http://imgur.com/czHYoSi"&gt;&lt;img src="http://i.imgur.com/czHYoSi.png" title="source: imgur.com" /&gt;&lt;/a&gt;
&lt;p&gt;Solvespace 四連桿圖檔:&lt;/p&gt;
&lt;p&gt;&lt;a href="./../w7/40423116.csv"&gt;40423116.csv&lt;/a&gt; (請以滑鼠右鍵存檔)&lt;/p&gt;
&lt;p&gt;&lt;a href="./../w7/40423116.slvs"&gt;40423116.slvs&lt;/a&gt; (請以滑鼠右鍵存檔)&lt;/p&gt;&lt;/p&gt;</summary><category term="WiKi"></category></entry><entry><title>Solvespace 零組件繪圖</title><link href="./solvespace-ling-zu-jian-hui-tu.html" rel="alternate"></link><updated>2016-10-12T12:00:00+08:00</updated><author><name>40423116</name></author><id>tag:,2016-10-12:./solvespace-ling-zu-jian-hui-tu.html</id><summary type="html">&lt;p&gt;Solvespace 零組件繪圖&lt;/p&gt;


&lt;p&gt;練習零件繪製&lt;/p&gt;
&lt;iframe src="https://player.vimeo.com/video/185673835" width="800" height="600" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;

&lt;p&gt;&lt;a href="https://vimeo.com/185673835"&gt;練習零件繪製&lt;/a&gt; from &lt;a href="https://vimeo.com/user47573583"&gt;40423116&lt;/a&gt; on &lt;a href="https://vimeo.com"&gt;Vimeo&lt;/a&gt;.&lt;/p&gt;</summary><category term="WiKi"></category></entry><entry><title>40423116 作業簡報 上課wik</title><link href="./40423116-zuo-ye-jian-bao-shang-ke-wik.html" rel="alternate"></link><updated>2016-09-29T12:00:00+08:00</updated><author><name>40423116</name></author><id>tag:,2016-09-29:./40423116-zuo-ye-jian-bao-shang-ke-wik.html</id><summary type="html">&lt;p&gt;&lt;a href="https://40423116.github.io/2016fallcadp_hw"&gt;個人作業簡報&lt;/a&gt;&lt;/p&gt;


&lt;p&gt;&lt;a href="http://140.130.17.17/public/2016fall/"&gt;作業環境&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ana2016fall_08.7z
mini2016fall.7z&lt;/p&gt;
&lt;h3&gt;在小組倉儲中設定組員為子模組的流程:&lt;/h3&gt;
&lt;p&gt;git clone 2016fallcadp_ag0 倉儲到近端&lt;/p&gt;
&lt;p&gt;執行 git submodule add -b gh-pages https://github.com/name/組員倉儲 name 就可以將 組員 倉儲納入 g0 子目錄中, 且新增 .gitmodules 模組設定檔, 而且在 .git/config 與 .git/modules 目錄中新增子模組相關設定資料.&lt;/p&gt;
&lt;p&gt;git clone 後執行 git submodule init, 啟始子模組, 然後利用 git submodule update 取下子模組的對應版本資料 (對應版本紀錄在 .git/modules/g100/refs/heads/master 檔案中.&lt;/p&gt;
&lt;p&gt;假如帶有子模組的倉儲管理者, 希望更新某一子模組的對應版本, 則必須先確定倉儲分支, 然後 cd 到子模組目錄中, 利用 git pull 後, 然後回到上層倉儲進行版本的提交推送. 假如希望拉回所有子模組的對應版本內容, 則使用 git pull origin gh-pages --recurse-submodules&lt;/p&gt;
&lt;p&gt;假如希望將所有子模組的對應版本更新到目前最新提交, 使用 git submodule foreach "(git checkout gh-pages; git pull)&amp;amp;"&lt;/p&gt;
&lt;p&gt;當利用上述指令完成更新子模組的對應版本之後, 必須進行提交推送, 將改版資料送到遠端, 之後則透過 git submodule update --init --recursive 將此對應版本的子模組取到近端, 其中因為子模組中還有子模組, 而此更新對這些新加入的子子模組並沒有 --init, 因此下子模組更新時, 要納入 --init&lt;/p&gt;
&lt;p&gt;在近端, 取下某一倉儲的所有資料, 包括子模組與子模組下的子子模組等:&lt;/p&gt;
&lt;p&gt;git clone repos-url&lt;/p&gt;
&lt;p&gt;cd repos_dir&lt;/p&gt;
&lt;p&gt;git submodule update --init --recursive&lt;/p&gt;
&lt;p&gt;或者直接&lt;/p&gt;
&lt;p&gt;git clone --recursive repos-url&lt;/p&gt;</summary><category term="WiKi"></category></entry></feed>